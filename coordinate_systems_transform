Types of coordinate systems:
  (1) Scanner Space: coordinate center at *magnet isocenter*, bore axis is Z, X to the left, Y to the ceiling. Direction cosines and P0 defined in DICOM file.
  (2) Native Space: basically the same as scanner, but RAS.
  (3) Talairach Space:  coordinate center at Anterior Commisure (mid-connection of AC points), X to the right, Y points out of the noise, Z points out of the top of the head.
  (4) RAS: Right-Anterior-Superior (anatomical coordinates). Recommend to use.
      column-row-slice: CRS
  (5) Field-of-View Based: arbitrarily choose center, directions arbitrary along the index axes.
      FSL - center at the corner of the FoV
      FreeSurfer (tkregister) - center at N/2
  (6) MNI, SPM: use whatever is defined in the file format (eg, QForm/SForm)
In summary: Talairach space use CRS (column-row-slice) + RSA (right-anterior-superior). Talairach MNI coordinates actually are MNI305 space.

Freesurfer System:
  (1) VoxelCRS: location of the point in the voxel-based matrix.
  (2)

Create registration to te MNI152 space (register.lta)
Function: move MNI305 file (generated by freesurfer) to MNI152
  tkregister2  --s cvs_avg35_inMNI152 --regheader --reg register.dat \
  --ltaout register.lta --noedit \
  --mov /usr/pubsw/packages/fsl/current/data/standard/MNI152_T1_2mm.nii.gz
# Resample each of these volumes using trilin
foreach vol (orig brain brainmask nu T1)
  mri_vol2vol --targ ../mri/$vol.mgz --reg register.lta \
   --mov /usr/pubsw/packages/fsl/current/data/standard/MNI152_T1_2mm.nii.gz \
   --o $vol.mgz --inv
end
########################################################################
# test
Prepared file: sub-sub001_space-MNI152NLin2009cAsym_res-2_desc-preproc_T1w.nii.gz ([97, 115, 97], RAS)
file_RAS_affine:
array([[   2. ,    0. ,    0. ,  -96.5],
       [   0. ,    2. ,    0. , -132.5],
       [   0. ,    0. ,    2. ,  -78.5],
       [   0. ,    0. ,    0. ,    1. ]])
# the prepared file is processed by fmriprep and is in the standard RAS MNI152 space (remenber xyz in RAS are negative values)
Prepared point: The voxel ijk[68, 60, 60] = RAS xyz[39.79217, -12.02824, 40.75501] = 1124.35400390625
  (a) file_img.affine[:3,:3].dot([68,60,60]) + file_img.affine[:3, 3]: array([ 39.5, -12.5,  41.5])
  (b) nib.affines.apply_affine(file_img.affine, [68, 60, 60]): array([ 39.5, -12.5,  41.5])
  (c) nib.affines.apply_affine(np.linalg.inv(file_img.affine), [39.5, -12.5, 41.5]): array([68., 60., 60.])
Affine from MNI305 to MNI152 (I call mni152_affine):
    0.9975   -0.0073    0.0176   -0.0429
    0.0146    1.0009   -0.0024    1.5496
   -0.0130   -0.0093    0.9971    1.1840
Affine from MNI152 to MNI305 (I call mni302_affine):
    1.0022    0.0071   -0.0177    0.0528
   -0.0146    0.9990    0.0027   -1.5519
    0.0129    0.0094    1.0027   -1.2012
  * mni302_affine = np.linalg.inv(mni152_affine)
# MNI152 coord has a littile difference with MNI305 coord
mni302_affine.dot([39.5, -12.5, 41.5, 1]) = MNI305 space: array([ 38.8164 , -14.50405,  40.8029 ])
####################################################
# tkrRSA is the coords from CRS (column-row-slice) voxels, while the RSA is the coords from corner in FSLeyes.
In fsaverage5 template, it has 10242 vertex points. The coord of each point is recorded in the vertices (+1 in R, normal in python)
For example, the vertex point 6392 in fsaverage5 is [-62.74, 1.47, 20.27] in surface space.
In R software, data$vertices[6393, ] = [-62.737732   1.471677  20.270655]; in python, it is data$vertices[6392, ].

Since we get the coord of vertex points in fsaverage5, this is trkRSA coords, and can be deemed as RAS coord in fsleyes.
####################################################
## example
####################################################
Example subject: sub-sub001
In the dir /freesurfer/sub-sub001/mri/orig/001.mgz file,
RAS:         [-47.55, 4.23, 17.22] (this is MNI_RAS)
TkReg RAS:   [53.00, 45.90, -31.25]
001:         97 [35, 160, 175]
MNI2009c_T1w.nii:     1239 [24, 68, 48]
lh.pial:     SurfaceRAS [-54.08, 29.01, 46.11]
             Vertex 115003 [-54.52, 28.08, 46.35]
####################################################
## test
####################################################
The voxel.
(1) MNI152 image -> MNI_RAS (Yes)
001 is the native space of sub-sub001, the voxel in this is [35, 160, 175].
MNI2009c_T1w is the MNI152 space, the voxel in this is [24, 68, 48].
```
nib.affines.apply_affine(file_img.affine, [24, 68, 48]) = array([-48.5,   3.5,  17.5]) MNI_RAS
```
(2) SurfaceRAS -> MNI_RAS (Yes)
```
# ScannerRAS = Norig*inv(Torig)*[tkrR tkrA tkrS 1]'
Norig.dot(np.linalg.inv(Torig)).dot([-54.08, 29.01, 46.11, 1]) = array([-47.54487,   4.23307,  17.22165,   1.     ])
# SurfaceRAS: [-54.08, 29.01, 46.11, 1]
# Norig: mri_info --vox2ras orig.mgz
# Torig: a fixed matrix
   [-1.00000  ,  0.00000  ,  0.00000  ,128.00000 ],
   [0.00000   , 0.00000 ,   1.00000 ,-128.00000 ],
   [0.00000 ,  -1.00000  ,  0.00000 , 128.00000 ],
   [0.00000  ,  0.00000  ,  0.00000 ,   1.00000 ]
```
(3) 
```
# MNI305RAS = TalXFM*Norig*inv(Torig)*[tkrR tkrA tkrS 1]'
```





















